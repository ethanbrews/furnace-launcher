// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Data.Minecraft.Manifests;
//
//    var minecraftAssetsManifest = MinecraftAssetsManifest.FromJson(jsonString);

namespace Furnace.Actions.Minecraft.Data
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class MinecraftAssetsManifest
    {
        [JsonProperty("objects")]
        public Dictionary<string, Object> Objects { get; set; }
    }

    public partial class Object
    {
        [JsonProperty("hash")]
        public string Hash { get; set; }

        [JsonProperty("size")]
        public long Size { get; set; }
    }

    public partial class MinecraftAssetsManifest
    {
        public static MinecraftAssetsManifest FromJson(string json) => JsonConvert.DeserializeObject<MinecraftAssetsManifest>(json, Furnace.Actions.Minecraft.Data.ConverterAssets.Settings);
    }

    public static class SerializeAssets
    {
        public static string ToJson(this MinecraftAssetsManifest self) => JsonConvert.SerializeObject(self, Furnace.Actions.Minecraft.Data.ConverterAssets.Settings);
    }

    internal static class ConverterAssets
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}